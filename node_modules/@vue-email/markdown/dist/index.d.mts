import * as vue from 'vue';
import { CSSProperties, PropType } from 'vue';

interface StylesType {
    h1?: CSSProperties;
    h2?: CSSProperties;
    h3?: CSSProperties;
    h4?: CSSProperties;
    h5?: CSSProperties;
    h6?: CSSProperties;
    blockQuote?: CSSProperties;
    bold?: CSSProperties;
    italic?: CSSProperties;
    link?: CSSProperties;
    codeBlock?: CSSProperties;
    codeInline?: CSSProperties;
    p?: CSSProperties;
    li?: CSSProperties;
    ul?: CSSProperties;
    ol?: CSSProperties;
    image?: CSSProperties;
    br?: CSSProperties;
    hr?: CSSProperties;
    table?: CSSProperties;
    thead?: CSSProperties;
    tbody?: CSSProperties;
    tr?: CSSProperties;
    th?: CSSProperties;
    td?: CSSProperties;
    strikethrough?: CSSProperties;
}

declare const Markdown: vue.DefineComponent<{
    source: {
        type: StringConstructor;
        default: undefined;
    };
    markdownCustomStyles: {
        type: PropType<StylesType>;
        default: undefined;
    };
    markdownContainerStyles: {
        type: PropType<CSSProperties>;
        default: undefined;
    };
}, () => vue.VNode<vue.RendererNode, vue.RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, vue.ComponentOptionsMixin, vue.ComponentOptionsMixin, {}, string, vue.PublicProps, Readonly<vue.ExtractPropTypes<{
    source: {
        type: StringConstructor;
        default: undefined;
    };
    markdownCustomStyles: {
        type: PropType<StylesType>;
        default: undefined;
    };
    markdownContainerStyles: {
        type: PropType<CSSProperties>;
        default: undefined;
    };
}>>, {
    source: string;
    markdownCustomStyles: StylesType;
    markdownContainerStyles: CSSProperties;
}, {}>;

export { Markdown };
