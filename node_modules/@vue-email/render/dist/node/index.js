"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/node/index.ts
var node_exports = {};
__export(node_exports, {
  cleanup: () => cleanup,
  plainTextSelectors: () => plainTextSelectors,
  render: () => render
});
module.exports = __toCommonJS(node_exports);

// src/shared/render.ts
var import_server_renderer = require("vue/server-renderer");
var import_vue = require("vue");
var import_html_to_text = require("html-to-text");

// src/shared/utils/pretty.ts
var import_js_beautify = __toESM(require("js-beautify"));
var defaults = {
  unformatted: ["code", "pre", "em", "strong", "span"],
  indent_inner_html: true,
  indent_char: " ",
  indent_size: 2,
  sep: "\n"
};
var pretty = (str, options = {}) => {
  return import_js_beautify.default.html(str, { ...defaults, ...options });
};

// src/shared/plain-text-selectors.ts
var plainTextSelectors = [
  { selector: "img", format: "skip" },
  { selector: "#__vue-email-preview", format: "skip" },
  {
    selector: "a",
    options: { linkBrackets: false }
  }
];

// src/shared/utils/cleanup.ts
function cleanup(str) {
  if (!str || typeof str !== "string")
    return str;
  return str.replace(/ data-v-inspector="[^"]*"/g, "").replace(/<!--\[-->/g, "").replace(/<!--\]-->/g, "").replace(/<!--[\s\S]*?-->/g, "").replace(/<style>[\s\S]*?<\/style>/g, "").replace(/<script>[\s\S]*?<\/script>/g, "").replace(/<script[^>]*>[\s\S]*?<\/script>/g, "").replace(/<template>/g, "").replace(/<template[^>]*>/g, "").replace(/<\/template>/g, "").replace(/<tailwind-clean-component>/g, "").replace(/<tailwind-clean-component[^>]*>/g, "").replace(/<\/tailwind-clean-component>/g, "");
}

// src/shared/render.ts
async function render(component, props, options) {
  const doctype = '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">';
  const App = (0, import_vue.createSSRApp)(component, props || {});
  const markup = await (0, import_server_renderer.renderToString)(App);
  if (options == null ? void 0 : options.plainText) {
    return (0, import_html_to_text.convert)(markup, {
      selectors: plainTextSelectors,
      ...(options == null ? void 0 : options.plainText) === true ? options.htmlToTextOptions : {}
    });
  }
  const doc = `${doctype}${cleanup(markup)}`;
  if (options && options.pretty) {
    return pretty(doc);
  }
  return doc;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  cleanup,
  plainTextSelectors,
  render
});
