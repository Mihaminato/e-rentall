"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  CodeInline: () => CodeInline
});
module.exports = __toCommonJS(src_exports);
var import_vue = require("vue");
var CodeInline = (0, import_vue.defineComponent)({
  name: "CodeInline",
  props: {
    class: {
      type: String,
      default: ""
    },
    style: {
      type: Object
    }
  },
  setup(props, { slots }) {
    return () => {
      var _a, _b;
      return [(0, import_vue.h)("style", null, `
      meta ~ .cino {
        display: none !important;
        opacity: 0 !important;
      }

      meta ~ .cio {
        display: block !important;
      }
    `), (0, import_vue.h)("code", {
        ...props,
        class: [
          props.class,
          "cino"
        ],
        style: props.style
      }, (_a = slots.default) == null ? void 0 : _a.call(slots)), (0, import_vue.h)("span", {
        ...props,
        class: [
          props.class,
          "cio"
        ],
        style: { ...props.style, display: "none" }
      }, (_b = slots.default) == null ? void 0 : _b.call(slots))];
    };
  }
});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  CodeInline
});
