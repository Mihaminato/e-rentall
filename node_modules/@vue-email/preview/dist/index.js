"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  Preview: () => Preview,
  renderWhiteSpace: () => renderWhiteSpace
});
module.exports = __toCommonJS(src_exports);
var import_vue = require("vue");
var PREVIEW_MAX_LENGTH = 150;
var renderWhiteSpace = (text) => {
  if (text.length >= PREVIEW_MAX_LENGTH) {
    return null;
  }
  const whiteSpaceCodes = "\xA0\u200C\u200B\u200D\u200E\u200F\uFEFF";
  return (0, import_vue.h)("div", [whiteSpaceCodes.repeat(PREVIEW_MAX_LENGTH - text.length)]);
};
var Preview = (0, import_vue.defineComponent)({
  name: "Preview",
  setup(_, { slots }) {
    const text = (0, import_vue.computed)(() => {
      if (slots.default !== void 0) {
        const children = slots.default()[0].children;
        const newText = Array.isArray(children) ? children.join("") : children;
        return newText == null ? void 0 : newText.substring(0, PREVIEW_MAX_LENGTH);
      }
      return "";
    });
    return () => {
      return (0, import_vue.h)(
        "div",
        {
          style: {
            display: "none",
            overflow: "hidden",
            lineHeight: "1px",
            opacity: 0,
            maxHeight: 0,
            maxWidth: 0
          }
        },
        [text.value, renderWhiteSpace(text.value)]
      );
    };
  }
});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Preview,
  renderWhiteSpace
});
